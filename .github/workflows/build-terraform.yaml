name: Terraform deployment

on:
  pull_request:
    branches:
      - '[0-9]+-*' 

jobs:
  build-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Exist if it's a solution branch
        id:   vars
        run: |
            if [[ ! ${{ github.ref_name }} =~ [0-9]+-* ]]; then
              echo "The branch name doesn't follow a solution branch name format"
              exit 1
            else
              IFS='-' read -r id string <<< "${{ github.ref_name }}"
              echo "entered"
              backend="${string}_backend_config"
              echo "::set-output name=secret::$string"
              echo "::set-output name=backend::$backend"
              echo "::set-output name=path::$id"
            fi
            


      - name: create env variable
        run: |
            echo "${{ steps.vars.outputs.secret }}"
            touch terraform.tfvars
            touch backend.tfvars
            echo -e '${{ secrets[steps.vars.outputs.backend] }}' >> backend.tfvars
            echo -e '${{ secrets[steps.vars.outputs.secret] }}' >> terraform.tfvars
            cat backend.tfvars
        working-directory: ${{ steps.vars.outputs.path }}
            

      - name: check if variable exist
        run: |
            cat terraform.tfvars
        working-directory: ${{ steps.vars.outputs.path }}


      - name: Set Up Terrform
        uses: hashicorp/setup-terraform@v2
 
      - name: Terraform Init
        id: Init
        run: terraform init -backend-config="backend.tfvars" -no-color
        working-directory: ${{ steps.vars.outputs.path }}

      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -var-file=~/.tfvars -no-color -input=false
        continue-on-error: false


      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
            })
