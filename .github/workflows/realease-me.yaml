name: Generate-Release-Note

on:
  push:
    branches: 
     - '[0-9]+-*'

jobs:
  Release-Note:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: cloned-repo

      - name: Get Path name
        id: path
        run: |
          cd cloned-repo
          branch=${{ github.ref_name }} 
          IFS='-' read -r id string <<< "$branch"
          echo "::set-output name=path::$id"
          echo "::set-output name=package::$string"
          file="simple"
          cd $id
          for item in mix.exs go.mod Chart.yaml package.json composer.json version.rb var.tf setup.py requirements.txt
          do
            MYVAR=`find  . -maxdepth 1 -type f -name "$item"  -print`
            echo "$MYVAR"
            if [[ -n "$MYVAR" ]]; then
              file=$item;
              break;
              fi
          done
          if [[ "$file" == *mix.exs ]]; then
            echo '::set-output name=release-type::elixir'
          elif [[ "$file" == *go.mod ]]; 
          then
            echo '::set-output name=release-type::go'
          elif [[ "$file" == *Chart.yaml ]]; 
          then
            echo '::set-output name=release-type::helm'
          elif [[ "$file" == *package.json ]]; 
          then
            echo '::set-output name=release-type::node'
          elif [[ "$file" == *version.rb ]]; 
          then
            echo '::set-output name=release-type::ruby'
          elif [[ "$file" ==  *var.tf ]]; 
          then
            echo '::set-output name=release-type::terraform-module'
          elif [[ "$file" ==  *setup.py ]] || [[ "$file" ==  *requirements.txt ]]; 
          then
            echo '::set-output name=release-type::python'
          else
            echo '::set-output name=release-type::simple'
          fi
          
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         release-type: ${{ steps.path.outputs.release-type }}
         package-name:  "release_${{ steps.path.outputs.path }}-${{ steps.path.outputs.package }}"
         path: ${{ steps.path.outputs.path }}
         default-branch: ${{ github.ref_name }}
         changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'
         monorepo-tags: true
         bump-minor-pre-major: true
         bump-patch-for-minor-pre-major: true  
         extra-files: |
          version.md


      - id: Set up terraform release
        if: ${{ steps.release.outputs.release_created }} && [[ [[ ${{ github.ref_name }} =~  terraform-* ]] || ${{ steps.path.outputs.release-type }} == "terraform-module" ]]
        run: |
         curl    -X POST  -H "Authorization: token $TOKEN"
         -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/akinpelu746/1234-terraform/actions/workflows/deploy_terraform/dispatches \
         -d '{"ref": "${{ steps.path.outputs.tag_name }}"}'
        env:
          TOKEN:  ${{ secrets.PAT_TOKEN }}


      - id: Set up terraform release
        if: ${{ steps.release.outputs.release_created }} && [[ [[ ${{ github.ref_name }} =~  terraform-* ]] || ${{ steps.path.outputs.release-type }} == "terraform-module" ]]
        run: |
         curl  -u ":$TOKEN"  -X POST   -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/akinpelu746/1234-terraform/actions/workflows/deploy_terraform/dispatches \
         -d '{"ref": "${{ steps.path.outputs.tag_name }}"}'
        env:
          TOKEN:  ${{ secrets.GITHUB_TOKEN }}

#         curl  -X POST   -H "Accept: application/vnd.github.v3+json" \
#        https://api.github.com/repos/OWNER/REPO/actions/workflows/WORKFLOW_ID/dispatches \
#         -d '{"ref": "${{ steps.path.outputs.tag_name }}","inputs":{"name":"Mona the Octocat",# "home":"San Francisco, CA"}}'